<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.demo.damulTalk.user.mapper.UserMapper">
    
    <select id="findByUsername">
        SELECT * FROM users WHERE username = #{username}
    </select>

    <select id="findByNickname">
        SELECT * FROM users WHERE nickname = #{nickname}
    </select>

    <select id="selectFollowInfoById" resultType="com.demo.damulTalk.friend.dto.FriendDto">
        SELECT
            user_id as userId,
            nickname,
            profile_image_url AS profileImageUrl
        FROM users
        WHERE user_id = #{userId}
    </select>

    <select id="selectUserInfo" resultType="com.demo.damulTalk.user.dto.UserInfo">
        SELECT
            u.nickname,
            u.status_message          AS statusMessage,
            (
                SELECT COUNT(*)
                FROM friends
                WHERE status = 'ACCEPTED'
                  AND (first_user_id = #{targetId} OR second_user_id = #{targetId})
            )                         AS friendNum,
            u.joined_at               AS joinedAt,
            CASE
                WHEN EXISTS (
                    SELECT 1
                    FROM friends
                    WHERE status = 'ACCEPTED'
                      AND (
                        (first_user_id = #{userId} AND second_user_id = #{targetId})
                            OR (first_user_id = #{targetId} AND second_user_id = #{userId})
                        )
                )
                    THEN TRUE
                ELSE FALSE
                END                      AS isFriend
        FROM users u
        WHERE u.user_id = #{targetId}
    </select>

    <select id="selectMyInfo" resultType="com.demo.damulTalk.auth.dto.LoginResponseDto">
        SELECT
            user_id as userId,
            nickname,
            profile_image_url as profileImageUrl
        FROM users
        WHERE user_id = #{userId}
    </select>

    <insert id="insertUser" parameterType="com.demo.damulTalk.user.domain.User">
        INSERT INTO users (username, password, nickname, joined_at)
        VALUES (#{username}, #{password}, #{nickname}, #{joinedAt})
    </insert>

    <update id="updatePassword">
        UPDATE users
        SET password = #{password}
        WHERE username = #{username}
    </update>

</mapper>
